{"ast":null,"code":"var _jsxFileName = \"/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport Add from \"../img/upload.jpg\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, storage } from \"../firebase\";\nimport React, { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [err, setErr] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      const res = createUserWithEmailAndPassword(auth, email, password);\n      const storageRef = ref(storage, displayName);\n      const uploadTask = uploadBytesResumable(storageRef, file); // Register three observers:\n      // 1. 'state_changed' observer, called any time the state changes\n      // 2. Error observer, called on failure\n      // 3. Completion observer, called on successful completion\n\n      uploadTask.on(error => {\n        // Handle unsuccessful uploads\n        setErr(true);\n      }, () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateProfile((await res).user, {\n            displayName,\n            photoUrl: downloadURL\n          });\n          await setDoc(doc(db, \"users\", res.us.uid));\n        });\n      });\n    } catch {\n      setErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"Talk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" display_name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \" email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \" password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Add,\n            alt: \"There was supposed to be a picture here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you hvae an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"4f/TxW+LdGGAPzcwGwavGh8Z84w=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx"],"names":["Add","createUserWithEmailAndPassword","updateProfile","auth","storage","React","useState","ref","uploadBytesResumable","getDownloadURL","doc","setDoc","Register","err","setErr","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","storageRef","uploadTask","on","error","snapshot","then","downloadURL","user","photoUrl","db","us","uid","display"],"mappings":"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","sourcesContent":["\nimport Add from \"../img/upload.jpg\"\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport {auth, storage} from \"../firebase\";\nimport React, { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL  } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\"; \n\n\n\nconst Register = () => {\n    const[err, setErr] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const displayName = e.target[0].value;\n        const email = e.target[1].value;\n        const password = e.target[2].value;\n        const file = e.target[3].files[0];\n\n\n        try {\n            const res = createUserWithEmailAndPassword(auth, email, password);\n\nconst storageRef = ref(storage, displayName);\n\nconst uploadTask = uploadBytesResumable(storageRef, file);\n\n// Register three observers:\n// 1. 'state_changed' observer, called any time the state changes\n// 2. Error observer, called on failure\n// 3. Completion observer, called on successful completion\nuploadTask.on(\n   (error) => {\n    // Handle unsuccessful uploads\n    setErr(true);\n  }, \n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    getDownloadURL(uploadTask.snapshot.ref).then(async(downloadURL) => {\nawait updateProfile((await res).user, {\n    displayName, photoUrl:downloadURL\n});\n\nawait setDoc(doc(db,\"users\", res.us.uid))\n\n\n});\n  }\n);\n        }\n        catch {\n            setErr(true);\n        }\n\n    };\n\n    return (\n        <div className=\"formContainer\">\n            <div className=\"formWrapper\">\n                <span className=\"logo\">Talk</span>\n                <span className=\"title\">Register</span>\n                < form onSubmit={handleSubmit}>\n                    < input type=\"text\" placeholder=\" display_name \" />\n                    < input type=\"email\" placeholder=\" email \" />\n                    < input type=\"password\" placeholder=\" password \" />\n                    < input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n                    <label htmlFor=\"file\">\n                        <img src={Add} alt=\"There was supposed to be a picture here\" />\n\n                    </label>\n                    <button>Signup</button>\n                    {err && <span>Something went wrong</span>}\n                </form>\n                <p>Do you hvae an account? Login</p>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}
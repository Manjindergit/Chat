{"ast":null,"code":"var _jsxFileName = \"/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx\",\n    _s2 = $RefreshSig$();\n\nimport Add from \"../img/upload.jpg\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, db, storage } from \"../firebase\";\nimport React, { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [err, setErr] = useState(false);\n  const [loading, setLoading] = useState(false); // const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    _s();\n\n    setLoading(true);\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      //Create user\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const navigate = useNavigate(); //Create a unique image name\n\n      const date = new Date().getTime();\n      const storageRef = ref(storage, `${displayName + date}`);\n      await uploadBytesResumable(storageRef, file).then(() => {\n        getDownloadURL(storageRef).then(async downloadURL => {\n          try {\n            //Update profile\n            await updateProfile(res.user, {\n              displayName,\n              photoURL: downloadURL\n            }); //create user on firestore\n\n            await setDoc(doc(db, \"users\", res.user.uid), {\n              uid: res.user.uid,\n              displayName,\n              email,\n              photoURL: downloadURL\n            });\n            await setDoc(doc(db, \"userChats\", res.user.uid), {});\n            navigate(\"/\"); //create empty user chats on firestore\n          } catch (err) {\n            console.log(err);\n            setErr(true);\n            setLoading(false);\n          }\n        });\n      });\n    } catch (err) {\n      setErr(true);\n      setLoading(false);\n    }\n  };\n\n  _s(handleSubmit, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"Talk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" display_name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \" email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \" password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Add,\n            alt: \"There was supposed to be a picture here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you hvae an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Register, \"dRMCcmGD4zKxQ6+CC0etpOCUyiU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx"],"names":["Add","createUserWithEmailAndPassword","updateProfile","auth","db","storage","React","useState","ref","uploadBytesResumable","getDownloadURL","doc","setDoc","useNavigate","Link","Register","err","setErr","loading","setLoading","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","navigate","date","Date","getTime","storageRef","then","downloadURL","user","photoURL","uid","console","log","display"],"mappings":"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","sourcesContent":["\nimport Add from \"../img/upload.jpg\"\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, db, storage } from \"../firebase\";\nimport React, { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\n\n\nconst Register = () => {\n    const [err, setErr] = useState(false);\n    const [loading, setLoading] = useState(false);\n    // const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        setLoading(true);\n        e.preventDefault();\n        const displayName = e.target[0].value;\n        const email = e.target[1].value;\n        const password = e.target[2].value;\n        const file = e.target[3].files[0];\n\n        try {\n            //Create user\n            const res = await createUserWithEmailAndPassword(auth, email, password);\n            const navigate=useNavigate()\n\n            //Create a unique image name\n            const date = new Date().getTime();\n            const storageRef = ref(storage, `${displayName + date}`);\n\n            await uploadBytesResumable(storageRef, file).then(() => {\n                getDownloadURL(storageRef).then(async (downloadURL) => {\n                    try {\n                        //Update profile\n                        await updateProfile(res.user, {\n                            displayName,\n                            photoURL: downloadURL,\n                        });\n                        //create user on firestore\n                        await setDoc(doc(db, \"users\", res.user.uid), {\n                            uid: res.user.uid,\n                            displayName,\n                            email,\n                            photoURL: downloadURL,\n                        });\n                        await setDoc(doc(db, \"userChats\", res.user.uid), {});\n                        navigate(\"/\");\n\n                        //create empty user chats on firestore\n\n                    } catch (err) {\n                        console.log(err);\n                        setErr(true);\n                        setLoading(false);\n                    }\n                });\n            });\n        } catch (err) {\n            setErr(true);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"formContainer\">\n            <div className=\"formWrapper\">\n                <span className=\"logo\">Talk</span>\n                <span className=\"title\">Register</span>\n                < form onSubmit={handleSubmit}>\n                    < input type=\"text\" placeholder=\" display_name \" />\n                    < input type=\"email\" placeholder=\" email \" />\n                    < input type=\"password\" placeholder=\" password \" />\n                    < input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n                    <label htmlFor=\"file\">\n                        <img src={Add} alt=\"There was supposed to be a picture here\" />\n\n                    </label>\n                    <button>Signup</button>\n                    {err && <span>Something went wrong</span>}\n                </form>\n                <p>Do you hvae an account? Login</p>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}
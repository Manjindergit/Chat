{"ast":null,"code":"var _jsxFileName = \"/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Add from \"../img/upload.jpg\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { useState } from \"react\";\nimport \"firebase/../firebase\"; //import { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  cosnt[(err, setErr)] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0];\n\n    try {\n      const res = createUserWithEmailAndPassword(auth, email, password);\n      const storage = getStorage();\n      const storageRef = ref(storage, 'images/rivers.jpg');\n      const uploadTask = uploadBytesResumable(storageRef, file); // Register three observers:\n      // 1. 'state_changed' observer, called any time the state changes\n      // 2. Error observer, called on failure\n      // 3. Completion observer, called on successful completion\n\n      uploadTask.on('state_changed', snapshot => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {// Handle unsuccessful uploads\n      }, () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File available at', downloadURL);\n        });\n      });\n    } catch {\n      setErr(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"Talk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \" display_name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \" email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \" password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Add,\n            alt: \"There was supposed to be a picture here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Do you hvae an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"Hdw5EO+DplCNBEJcNuH8tsP7WZ4=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx"],"names":["React","Add","createUserWithEmailAndPassword","auth","useState","Register","cosnt","err","setErr","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","storage","getStorage","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","getDownloadURL","then","downloadURL","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Add from \"../img/upload.jpg\"\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { useState } from \"react\";\nimport {  } from \"firebase/../firebase\";\n\n\n//import { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\n\n\n\nconst Register = () => {\n    cosnt[err, setErr] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const displayName = e.target[0].value;\n        const email = e.target[1].value;\n        const password = e.target[2].value;\n        const file = e.target[3].files[0];\n\n\n        try {\n            const res = createUserWithEmailAndPassword(auth, email, password);\n\nconst storage = getStorage();\nconst storageRef = ref(storage, 'images/rivers.jpg');\n\nconst uploadTask = uploadBytesResumable(storageRef, file);\n\n// Register three observers:\n// 1. 'state_changed' observer, called any time the state changes\n// 2. Error observer, called on failure\n// 3. Completion observer, called on successful completion\nuploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case 'paused':\n        console.log('Upload is paused');\n        break;\n      case 'running':\n        console.log('Upload is running');\n        break;\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n  }, \n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n      console.log('File available at', downloadURL);\n    });\n  }\n);\n        }\n\n        catch {\n            setErr(true);\n        }\n\n    };\n\n    return (\n        <div className=\"formContainer\">\n            <div className=\"formWrapper\">\n                <span className=\"logo\">Talk</span>\n                <span className=\"title\">Register</span>\n                < form onSubmit={handleSubmit}>\n                    < input type=\"text\" placeholder=\" display_name \" />\n                    < input type=\"email\" placeholder=\" email \" />\n                    < input type=\"password\" placeholder=\" password \" />\n                    < input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n                    <label htmlFor=\"file\">\n                        <img src={Add} alt=\"There was supposed to be a picture here\" />\n\n                    </label>\n                    <button>Signup</button>\n                    {err && <span>Something went wrong</span>}\n                </form>\n                <p>Do you hvae an account? Login</p>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}
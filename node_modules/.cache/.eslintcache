[{"/home/manjinder/Desktop/Git/Chat/src/index.js":"1","/home/manjinder/Desktop/Git/Chat/src/App.js":"2","/home/manjinder/Desktop/Git/Chat/src/pages/Login.jsx":"3","/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx":"4","/home/manjinder/Desktop/Git/Chat/src/pages/Home.jsx":"5","/home/manjinder/Desktop/Git/Chat/src/components/Sidebar.jsx":"6","/home/manjinder/Desktop/Git/Chat/src/components/Chat.jsx":"7","/home/manjinder/Desktop/Git/Chat/src/components/Navbar.jsx":"8","/home/manjinder/Desktop/Git/Chat/src/components/Search.jsx":"9","/home/manjinder/Desktop/Git/Chat/src/components/Chats.jsx":"10","/home/manjinder/Desktop/Git/Chat/src/components/Messages.jsx":"11","/home/manjinder/Desktop/Git/Chat/src/components/Message.jsx":"12","/home/manjinder/Desktop/Git/Chat/src/components/Input.jsx":"13","/home/manjinder/Desktop/Git/Chat/src/firebase.js":"14","/home/manjinder/Desktop/Git/Chat/src/context/AuthContext.js":"15","/home/manjinder/Desktop/Git/Chat/src/context/ChatContext.js":"16"},{"size":451,"mtime":1669620767944,"results":"17","hashOfConfig":"18"},{"size":996,"mtime":1669604704800,"results":"19","hashOfConfig":"18"},{"size":1313,"mtime":1669605496029,"results":"20","hashOfConfig":"18"},{"size":3301,"mtime":1669603203674,"results":"21","hashOfConfig":"18"},{"size":357,"mtime":1669006073120,"results":"22","hashOfConfig":"18"},{"size":300,"mtime":1669005901625,"results":"23","hashOfConfig":"18"},{"size":689,"mtime":1669620984676,"results":"24","hashOfConfig":"18"},{"size":672,"mtime":1669605749224,"results":"25","hashOfConfig":"18"},{"size":2662,"mtime":1669619244068,"results":"26","hashOfConfig":"18"},{"size":1447,"mtime":1669620387580,"results":"27","hashOfConfig":"18"},{"size":836,"mtime":1669621097148,"results":"28","hashOfConfig":"18"},{"size":1079,"mtime":1669621250560,"results":"29","hashOfConfig":"18"},{"size":2753,"mtime":1669621761412,"results":"30","hashOfConfig":"18"},{"size":893,"mtime":1669596564266,"results":"31","hashOfConfig":"18"},{"size":672,"mtime":1669603734557,"results":"32","hashOfConfig":"18"},{"size":983,"mtime":1669620657299,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rb1gbs",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manjinder/Desktop/Git/Chat/src/index.js",[],[],"/home/manjinder/Desktop/Git/Chat/src/App.js",[],[],[],"/home/manjinder/Desktop/Git/Chat/src/pages/Login.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/pages/Register.jsx",["84","85","86"],[],"\nimport Add from \"../img/upload.jpg\"\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, db, storage } from \"../firebase\";\nimport React, { useState } from \"react\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\n\n\nconst Register = () => {\n    const [err, setErr] = useState(false);\n    const navigate=useNavigate()\n\n    const [loading, setLoading] = useState(false);\n    // const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        setLoading(true);\n        e.preventDefault();\n        const displayName = e.target[0].value;\n        const email = e.target[1].value;\n        const password = e.target[2].value;\n        const file = e.target[3].files[0];\n\n        try {\n            //Create user\n            const res = await createUserWithEmailAndPassword(auth, email, password);\n\n            //Create a unique image name\n            const date = new Date().getTime();\n            const storageRef = ref(storage, `${displayName + date}`);\n\n            await uploadBytesResumable(storageRef, file).then(() => {\n                getDownloadURL(storageRef).then(async (downloadURL) => {\n                    try {\n                        //Update profile\n                        await updateProfile(res.user, {\n                            displayName,\n                            photoURL: downloadURL,\n                        });\n                        //create user on firestore\n                        await setDoc(doc(db, \"users\", res.user.uid), {\n                            uid: res.user.uid,\n                            displayName,\n                            email,\n                            photoURL: downloadURL,\n                        });\n                        await setDoc(doc(db, \"userChats\", res.user.uid), {});\n                        navigate(\"/\");\n\n                        //create empty user chats on firestore\n\n                    } catch (err) {\n                        console.log(err);\n                        setErr(true);\n                        setLoading(false);\n                    }\n                });\n            });\n        } catch (err) {\n            setErr(true);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"formContainer\">\n            <div className=\"formWrapper\">\n                <span className=\"logo\">Talk</span>\n                <span className=\"title\">Register</span>\n                < form onSubmit={handleSubmit}>\n                    < input type=\"text\" placeholder=\" display_name \" />\n                    < input type=\"email\" placeholder=\" email \" />\n                    < input type=\"password\" placeholder=\" password \" />\n                    < input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n                    <label htmlFor=\"file\">\n                        <img src={Add} alt=\"There was supposed to be a picture here\" />\n\n                    </label>\n                    <button>Signup</button>\n                    {err && <span>Something went wrong</span>}\n                </form>\n                <p>Do you hvae an account? Login</p>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Register","/home/manjinder/Desktop/Git/Chat/src/pages/Home.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Sidebar.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Chat.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Navbar.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Search.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Chats.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Messages.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Message.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/components/Input.jsx",[],[],"/home/manjinder/Desktop/Git/Chat/src/firebase.js",[],[],"/home/manjinder/Desktop/Git/Chat/src/context/AuthContext.js",[],[],"/home/manjinder/Desktop/Git/Chat/src/context/ChatContext.js",[],[],{"ruleId":"87","severity":1,"message":"88","line":8,"column":23,"nodeType":"89","messageId":"90","endLine":8,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":16,"column":12,"nodeType":"89","messageId":"90","endLine":16,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":79,"column":25,"nodeType":"94","endLine":79,"endColumn":88},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]